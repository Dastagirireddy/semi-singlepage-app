/// <reference path="../disposables/disposable.ts" />
/// <reference path="./scheduler.ts" />
/// <reference path="./scheduleditem.ts" />
(function () {
    var vts;
    var b = vts.isEnabled;
    var a = vts.add(100, 500);
    var n = vts.toAbsoluteTime(1000);
    var r = vts.toRelativeTime(1000);
    var d = vts.start();
    vts.stop();
    vts.advanceTo(null);
    vts.advanceBy(null);
    vts.sleep(null);
    var i = vts.getNext();
    b = vts.isEnabled;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy9ub2RlX21vZHVsZXMvcngvdHMvY29yZS9jb25jdXJyZW5jeS92aXJ0dWFsdGltZXNjaGVkdWxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxBQUdBLHFEQUhxRDtBQUNyRCx1Q0FBdUM7QUFDdkMsMkNBQTJDO0FBK0QzQyxDQUFDO0lBR0csSUFBSSxHQUFvQyxDQUFDO0lBRXpDLElBQUksQ0FBQyxHQUFZLEdBQUcsQ0FBQyxTQUFTLENBQUM7SUFDL0IsSUFBSSxDQUFDLEdBQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDOUIsSUFBSSxDQUFDLEdBQVcsR0FBRyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QyxJQUFJLENBQUMsR0FBTyxHQUFHLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLElBQUksQ0FBQyxHQUFtQixHQUFHLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDcEMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ1gsR0FBRyxDQUFDLFNBQVMsQ0FBSyxJQUFJLENBQUMsQ0FBQztJQUN4QixHQUFHLENBQUMsU0FBUyxDQUFLLElBQUksQ0FBQyxDQUFDO0lBQ3hCLEdBQUcsQ0FBQyxLQUFLLENBQUssSUFBSSxDQUFDLENBQUM7SUFDcEIsSUFBSSxDQUFDLEdBQW1DLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN0RCxDQUFDLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUN0QixDQUFDLENBQUMsQ0FBQSIsImZpbGUiOiJwdWJsaWMvbm9kZV9tb2R1bGVzL3J4L3RzL2NvcmUvY29uY3VycmVuY3kvdmlydHVhbHRpbWVzY2hlZHVsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vZGlzcG9zYWJsZXMvZGlzcG9zYWJsZS50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9zY2hlZHVsZXIudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vc2NoZWR1bGVkaXRlbS50c1wiIC8+XG5tb2R1bGUgUngge1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgVmlydHVhbFRpbWVTY2hlZHVsZXI8VEFic29sdXRlLCBUUmVsYXRpdmU+IGV4dGVuZHMgSVNjaGVkdWxlciB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBZGRzIGEgcmVsYXRpdmUgdGltZSB2YWx1ZSB0byBhbiBhYnNvbHV0ZSB0aW1lIHZhbHVlLlxuICAgICAgICAgKiBAcGFyYW0ge051bWJlcn0gYWJzb2x1dGUgQWJzb2x1dGUgdmlydHVhbCB0aW1lIHZhbHVlLlxuICAgICAgICAgKiBAcGFyYW0ge051bWJlcn0gcmVsYXRpdmUgUmVsYXRpdmUgdmlydHVhbCB0aW1lIHZhbHVlIHRvIGFkZC5cbiAgICAgICAgICogQHJldHVybiB7TnVtYmVyfSBSZXN1bHRpbmcgYWJzb2x1dGUgdmlydHVhbCB0aW1lIHN1bSB2YWx1ZS5cbiAgICAgICAgICovXG4gICAgICAgIGFkZChmcm9tOiBUQWJzb2x1dGUsIGJ5OiBUUmVsYXRpdmUpOiBUQWJzb2x1dGU7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENvbnZlcnRzIGFuIGFic29sdXRlIHRpbWUgdG8gYSBudW1iZXJcbiAgICAgICAgICogQHBhcmFtIHtBbnl9IFRoZSBhYnNvbHV0ZSB0aW1lLlxuICAgICAgICAgKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgYWJzb2x1dGUgdGltZSBpbiBtc1xuICAgICAgICAgKi9cbiAgICAgICAgdG9BYnNvbHV0ZVRpbWUoZHVldGltZTogVEFic29sdXRlKTogbnVtYmVyO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDb252ZXJ0cyB0aGUgVGltZVNwYW4gdmFsdWUgdG8gYSByZWxhdGl2ZSB2aXJ0dWFsIHRpbWUgdmFsdWUuXG4gICAgICAgICAqIEBwYXJhbSB7TnVtYmVyfSB0aW1lU3BhbiBUaW1lU3BhbiB2YWx1ZSB0byBjb252ZXJ0LlxuICAgICAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9IENvcnJlc3BvbmRpbmcgcmVsYXRpdmUgdmlydHVhbCB0aW1lIHZhbHVlLlxuICAgICAgICAgKi9cbiAgICAgICAgdG9SZWxhdGl2ZVRpbWUoZHVldGltZTogbnVtYmVyKTogVFJlbGF0aXZlO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTdGFydHMgdGhlIHZpcnR1YWwgdGltZSBzY2hlZHVsZXIuXG4gICAgICAgICAqL1xuICAgICAgICBzdGFydCgpOiBJRGlzcG9zYWJsZTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogU3RvcHMgdGhlIHZpcnR1YWwgdGltZSBzY2hlZHVsZXIuXG4gICAgICAgICAqL1xuICAgICAgICBzdG9wKCk6IHZvaWQ7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFkdmFuY2VzIHRoZSBzY2hlZHVsZXIncyBjbG9jayB0byB0aGUgc3BlY2lmaWVkIHRpbWUsIHJ1bm5pbmcgYWxsIHdvcmsgdGlsbCB0aGF0IHBvaW50LlxuICAgICAgICAgKiBAcGFyYW0ge051bWJlcn0gdGltZSBBYnNvbHV0ZSB0aW1lIHRvIGFkdmFuY2UgdGhlIHNjaGVkdWxlcidzIGNsb2NrIHRvLlxuICAgICAgICAgKi9cbiAgICAgICAgYWR2YW5jZVRvKHRpbWU6IFRBYnNvbHV0ZSk6IHZvaWQ7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFkdmFuY2VzIHRoZSBzY2hlZHVsZXIncyBjbG9jayBieSB0aGUgc3BlY2lmaWVkIHJlbGF0aXZlIHRpbWUsIHJ1bm5pbmcgYWxsIHdvcmsgc2NoZWR1bGVkIGZvciB0aGF0IHRpbWVzcGFuLlxuICAgICAgICAgKiBAcGFyYW0ge051bWJlcn0gdGltZSBSZWxhdGl2ZSB0aW1lIHRvIGFkdmFuY2UgdGhlIHNjaGVkdWxlcidzIGNsb2NrIGJ5LlxuICAgICAgICAgKi9cbiAgICAgICAgYWR2YW5jZUJ5KHRpbWU6IFRSZWxhdGl2ZSk6IHZvaWQ7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFkdmFuY2VzIHRoZSBzY2hlZHVsZXIncyBjbG9jayBieSB0aGUgc3BlY2lmaWVkIHJlbGF0aXZlIHRpbWUuXG4gICAgICAgICAqIEBwYXJhbSB7TnVtYmVyfSB0aW1lIFJlbGF0aXZlIHRpbWUgdG8gYWR2YW5jZSB0aGUgc2NoZWR1bGVyJ3MgY2xvY2sgYnkuXG4gICAgICAgICAqL1xuICAgICAgICBzbGVlcCh0aW1lOiBUUmVsYXRpdmUpOiB2b2lkO1xuXG4gICAgICAgIGlzRW5hYmxlZDogYm9vbGVhbjtcblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyB0aGUgbmV4dCBzY2hlZHVsZWQgaXRlbSB0byBiZSBleGVjdXRlZC5cbiAgICAgICAgICogQHJldHVybnMge1NjaGVkdWxlZEl0ZW19IFRoZSBuZXh0IHNjaGVkdWxlZCBpdGVtLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0TmV4dCgpOiBpbnRlcm5hbHMuU2NoZWR1bGVkSXRlbTxUQWJzb2x1dGU+O1xuICAgIH1cbn1cblxuKGZ1bmN0aW9uKCkge1xuICAgIGludGVyZmFjZSBUQSB7IH1cbiAgICBpbnRlcmZhY2UgVFIgeyB9XG4gICAgdmFyIHZ0czogUnguVmlydHVhbFRpbWVTY2hlZHVsZXI8VEEsIFRSPjtcblxuICAgIHZhciBiOiBib29sZWFuID0gdnRzLmlzRW5hYmxlZDtcbiAgICB2YXIgYTogVEEgPSB2dHMuYWRkKDEwMCwgNTAwKTtcbiAgICB2YXIgbjogbnVtYmVyID0gdnRzLnRvQWJzb2x1dGVUaW1lKDEwMDApO1xuICAgIHZhciByOiBUUiA9IHZ0cy50b1JlbGF0aXZlVGltZSgxMDAwKTtcbiAgICB2YXIgZDogUnguSURpc3Bvc2FibGUgPSB2dHMuc3RhcnQoKTtcbiAgICB2dHMuc3RvcCgpO1xuICAgIHZ0cy5hZHZhbmNlVG8oPFRBPm51bGwpO1xuICAgIHZ0cy5hZHZhbmNlQnkoPFRSPm51bGwpO1xuICAgIHZ0cy5zbGVlcCg8VFI+bnVsbCk7XG4gICAgdmFyIGk6IFJ4LmludGVybmFscy5TY2hlZHVsZWRJdGVtPFRBPiA9IHZ0cy5nZXROZXh0KCk7XG4gICAgYiA9IHZ0cy5pc0VuYWJsZWQ7XG59KVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
