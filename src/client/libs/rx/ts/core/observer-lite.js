/// <reference path="./disposables/disposable.ts" />
/// <reference path="./checkedobserver.ts" />
var Rx;
(function (Rx) {
})(Rx || (Rx = {}));
(function () {
    var iobserver;
    var observer;
    iobserver.onNext(false);
    iobserver.onError(new Error('a'));
    iobserver.onCompleted();
    observer.onNext(false);
    observer.onError(new Error('a'));
    observer.onCompleted();
    var so = Rx.Observer.create(function (v) { return 1; });
    so = Rx.Observer.create(function (v) { return 1; }, function (e) { });
    so = Rx.Observer.create(function (v) { return 1; }, function (e) { }, function () { });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy9ub2RlX21vZHVsZXMvcngvdHMvY29yZS9vYnNlcnZlci1saXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9EQUFvRDtBQUNwRCw2Q0FBNkM7QUFDN0MsSUFBTyxFQUFFLENBcURSO0FBckRELFdBQU8sRUFBRSxFQUFDLENBQUM7QUFxRFgsQ0FBQyxFQXJETSxDQW9EaUMsQ0FwRC9CLEtBQUYsRUFBRSxRQXFEUjtBQUdELENBQUM7SUFDRyxJQUFJLFNBQWdDLENBQUM7SUFDckMsSUFBSSxRQUE4QixDQUFDO0lBRW5DLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEIsU0FBUyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2xDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUV4QixRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZCLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNqQyxRQUFRLENBQUMsV0FBVyxFQUFFLENBQUM7SUFFdkIsSUFBSSxFQUFFLEdBQXdCLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQUMsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxFQUFELENBQUMsQ0FBQyxDQUFDO0lBQzNELEVBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFDLENBQUMsSUFBSyxPQUFBLENBQUMsRUFBRCxDQUFDLEVBQUUsVUFBQyxDQUFDLElBQU8sQ0FBQyxDQUFDLENBQUM7SUFDOUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQUMsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxFQUFELENBQUMsRUFBRSxVQUFDLENBQUMsSUFBTyxDQUFDLEVBQUUsY0FBUSxDQUFDLENBQUMsQ0FBQztBQUM3RCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJwdWJsaWMvbm9kZV9tb2R1bGVzL3J4L3RzL2NvcmUvb2JzZXJ2ZXItbGl0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuL2Rpc3Bvc2FibGVzL2Rpc3Bvc2FibGUudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vY2hlY2tlZG9ic2VydmVyLnRzXCIgLz5cbm1vZHVsZSBSeCB7XG4gICAgLyoqXG4gICAgKiBTdXBwb3J0cyBwdXNoLXN0eWxlIGl0ZXJhdGlvbiBvdmVyIGFuIG9ic2VydmFibGUgc2VxdWVuY2UuXG4gICAgKi9cbiAgICBleHBvcnQgaW50ZXJmYWNlIElPYnNlcnZlcjxUPiB7XG4gICAgICAgIC8qKlxuICAgICAgICAqIE5vdGlmaWVzIHRoZSBvYnNlcnZlciBvZiBhIG5ldyBlbGVtZW50IGluIHRoZSBzZXF1ZW5jZS5cbiAgICAgICAgKiBAcGFyYW0ge0FueX0gdmFsdWUgTmV4dCBlbGVtZW50IGluIHRoZSBzZXF1ZW5jZS5cbiAgICAgICAgKi9cbiAgICAgICAgb25OZXh0KHZhbHVlOiBUKTogdm9pZDtcbiAgICAgICAgLyoqXG4gICAgICAgICogTm90aWZpZXMgdGhlIG9ic2VydmVyIHRoYXQgYW4gZXhjZXB0aW9uIGhhcyBvY2N1cnJlZC5cbiAgICAgICAgKiBAcGFyYW0ge0FueX0gZXJyb3IgVGhlIGVycm9yIHRoYXQgaGFzIG9jY3VycmVkLlxuICAgICAgICAqL1xuICAgICAgICBvbkVycm9yKGV4Y2VwdGlvbjogYW55KTogdm9pZDtcbiAgICAgICAgLyoqXG4gICAgICAgICogTm90aWZpZXMgdGhlIG9ic2VydmVyIG9mIHRoZSBlbmQgb2YgdGhlIHNlcXVlbmNlLlxuICAgICAgICAqL1xuICAgICAgICBvbkNvbXBsZXRlZCgpOiB2b2lkO1xuICAgIH1cbiAgICBcbiAgICBleHBvcnQgaW50ZXJmYWNlIE9ic2VydmVyPFQ+IHtcbiAgICAgICAgLyoqXG4gICAgICAgICogTm90aWZpZXMgdGhlIG9ic2VydmVyIG9mIGEgbmV3IGVsZW1lbnQgaW4gdGhlIHNlcXVlbmNlLlxuICAgICAgICAqIEBwYXJhbSB7QW55fSB2YWx1ZSBOZXh0IGVsZW1lbnQgaW4gdGhlIHNlcXVlbmNlLlxuICAgICAgICAqL1xuICAgICAgICBvbk5leHQodmFsdWU6IFQpOiB2b2lkO1xuICAgICAgICAvKipcbiAgICAgICAgKiBOb3RpZmllcyB0aGUgb2JzZXJ2ZXIgdGhhdCBhbiBleGNlcHRpb24gaGFzIG9jY3VycmVkLlxuICAgICAgICAqIEBwYXJhbSB7QW55fSBlcnJvciBUaGUgZXJyb3IgdGhhdCBoYXMgb2NjdXJyZWQuXG4gICAgICAgICovXG4gICAgICAgIG9uRXJyb3IoZXhjZXB0aW9uOiBhbnkpOiB2b2lkO1xuICAgICAgICAvKipcbiAgICAgICAgKiBOb3RpZmllcyB0aGUgb2JzZXJ2ZXIgb2YgdGhlIGVuZCBvZiB0aGUgc2VxdWVuY2UuXG4gICAgICAgICovXG4gICAgICAgIG9uQ29tcGxldGVkKCk6IHZvaWQ7XG4gICAgfVxuXG4gICAgZXhwb3J0IGludGVyZmFjZSBPYnNlcnZlclN0YXRpYyB7XG4gICAgICAgIC8qKlxuICAgICAgICAqICBDcmVhdGVzIGFuIG9ic2VydmVyIGZyb20gdGhlIHNwZWNpZmllZCBPbk5leHQsIGFsb25nIHdpdGggb3B0aW9uYWwgT25FcnJvciwgYW5kIE9uQ29tcGxldGVkIGFjdGlvbnMuXG4gICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29uTmV4dF0gT2JzZXJ2ZXIncyBPbk5leHQgYWN0aW9uIGltcGxlbWVudGF0aW9uLlxuICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvbkVycm9yXSBPYnNlcnZlcidzIE9uRXJyb3IgYWN0aW9uIGltcGxlbWVudGF0aW9uLlxuICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvbkNvbXBsZXRlZF0gT2JzZXJ2ZXIncyBPbkNvbXBsZXRlZCBhY3Rpb24gaW1wbGVtZW50YXRpb24uXG4gICAgICAgICogQHJldHVybnMge09ic2VydmVyfSBUaGUgb2JzZXJ2ZXIgb2JqZWN0IGltcGxlbWVudGVkIHVzaW5nIHRoZSBnaXZlbiBhY3Rpb25zLlxuICAgICAgICAqL1xuICAgICAgICBjcmVhdGU8VD4ob25OZXh0PzogKHZhbHVlOiBUKSA9PiB2b2lkLCBvbkVycm9yPzogKGV4Y2VwdGlvbjogYW55KSA9PiB2b2lkLCBvbkNvbXBsZXRlZD86ICgpID0+IHZvaWQpOiBPYnNlcnZlcjxUPjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAqIFN1cHBvcnRzIHB1c2gtc3R5bGUgaXRlcmF0aW9uIG92ZXIgYW4gb2JzZXJ2YWJsZSBzZXF1ZW5jZS5cbiAgICAqL1xuICAgIGV4cG9ydCB2YXIgT2JzZXJ2ZXI6IE9ic2VydmVyU3RhdGljO1xufVxuXG5cbihmdW5jdGlvbigpIHtcbiAgICB2YXIgaW9ic2VydmVyOiBSeC5JT2JzZXJ2ZXI8Ym9vbGVhbj47XG4gICAgdmFyIG9ic2VydmVyOiBSeC5PYnNlcnZlcjxib29sZWFuPjtcblxuICAgIGlvYnNlcnZlci5vbk5leHQoZmFsc2UpO1xuICAgIGlvYnNlcnZlci5vbkVycm9yKG5ldyBFcnJvcignYScpKTtcbiAgICBpb2JzZXJ2ZXIub25Db21wbGV0ZWQoKTtcblxuICAgIG9ic2VydmVyLm9uTmV4dChmYWxzZSk7XG4gICAgb2JzZXJ2ZXIub25FcnJvcihuZXcgRXJyb3IoJ2EnKSk7XG4gICAgb2JzZXJ2ZXIub25Db21wbGV0ZWQoKTtcblxuICAgIHZhciBzbzogUnguT2JzZXJ2ZXI8bnVtYmVyPiA9IFJ4Lk9ic2VydmVyLmNyZWF0ZSgodikgPT4gMSk7XG4gICAgc28gPSBSeC5PYnNlcnZlci5jcmVhdGUoKHYpID0+IDEsIChlKSA9PiB7IH0pO1xuICAgIHNvID0gUnguT2JzZXJ2ZXIuY3JlYXRlKCh2KSA9PiAxLCAoZSkgPT4geyB9LCAoKSA9PiB7IH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
