/// <reference path="./disposables/disposable.ts" />
/// <reference path="./concurrency/scheduler.ts" />
/// <reference path="./observable.ts" />
/// <reference path="./observer-lite.ts" />
var Rx;
(function (Rx) {
})(Rx || (Rx = {}));
(function () {
    var notification = new Rx.Notification(undefined, undefined, undefined, undefined, undefined, undefined);
    var observer;
    notification.accept(observer);
    notification.accept(function (n) { return n.toString(); }, function (e) { return e; }, function () { return false.toString(); });
    var observable = notification.toObservable();
    var observable = notification.toObservable(Rx.Scheduler.currentThread);
    Rx.Notification.createOnNext(function () { return true; });
    Rx.Notification.createOnError(new Error('a'));
    Rx.Notification.createOnCompleted();
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy9ub2RlX21vZHVsZXMvcngvdHMvY29yZS9ub3RpZmljYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0RBQW9EO0FBQ3BELG1EQUFtRDtBQUNuRCx3Q0FBd0M7QUFDeEMsMkNBQTJDO0FBQzNDLElBQU8sRUFBRSxDQWlFUjtBQWpFRCxXQUFPLEVBQUUsRUFBQyxDQUFDO0FBaUVYLENBQUMsRUFqRU0sQ0FnRTBDLENBaEV4QyxLQUFGLEVBQUUsUUFpRVI7QUFHRCxDQUFDO0lBQ0csSUFBSSxZQUFZLEdBQTRCLElBQUksRUFBRSxDQUFDLFlBQVksQ0FBUyxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRTFJLElBQUksUUFBOEIsQ0FBQztJQUNuQyxZQUFZLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlCLFlBQVksQ0FBQyxNQUFNLENBQUMsVUFBQyxDQUFDLElBQUssT0FBQSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQVosQ0FBWSxFQUFFLFVBQUMsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxFQUFELENBQUMsRUFBRSxjQUFNLE9BQUEsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUFoQixDQUFnQixDQUFDLENBQUM7SUFFM0UsSUFBSSxVQUFVLEdBQTBCLFlBQVksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNwRSxJQUFJLFVBQVUsR0FBMEIsWUFBWSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBRTlGLEVBQUUsQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLGNBQU0sT0FBQSxJQUFJLEVBQUosQ0FBSSxDQUFDLENBQUM7SUFDekMsRUFBRSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUM5QyxFQUFFLENBQUMsWUFBWSxDQUFDLGlCQUFpQixFQUFFLENBQUM7QUFDeEMsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoicHVibGljL25vZGVfbW9kdWxlcy9yeC90cy9jb3JlL25vdGlmaWNhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuL2Rpc3Bvc2FibGVzL2Rpc3Bvc2FibGUudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vY29uY3VycmVuY3kvc2NoZWR1bGVyLnRzXCIgLz5cbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuL29ic2VydmFibGUudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vb2JzZXJ2ZXItbGl0ZS50c1wiIC8+XG5tb2R1bGUgUngge1xuICAgIC8qKlxuICAgICAqICBSZXByZXNlbnRzIGEgbm90aWZpY2F0aW9uIHRvIGFuIG9ic2VydmVyLlxuICAgICAqL1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgTm90aWZpY2F0aW9uPFQ+IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEludm9rZXMgdGhlIGRlbGVnYXRlIGNvcnJlc3BvbmRpbmcgdG8gdGhlIG5vdGlmaWNhdGlvbiBvciB0aGUgb2JzZXJ2ZXIncyBtZXRob2QgY29ycmVzcG9uZGluZyB0byB0aGUgbm90aWZpY2F0aW9uIGFuZCByZXR1cm5zIHRoZSBwcm9kdWNlZCByZXN1bHQuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBtZW1iZXJPZiBOb3RpZmljYXRpb25cbiAgICAgICAgICogQHBhcmFtIHtBbnl9IG9ic2VydmVyT3JPbk5leHQgRGVsZWdhdGUgdG8gaW52b2tlIGZvciBhbiBPbk5leHQgbm90aWZpY2F0aW9uIG9yIE9ic2VydmVyIHRvIGludm9rZSB0aGUgbm90aWZpY2F0aW9uIG9uLi5cbiAgICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gb25FcnJvciBEZWxlZ2F0ZSB0byBpbnZva2UgZm9yIGFuIE9uRXJyb3Igbm90aWZpY2F0aW9uLlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkNvbXBsZXRlZCBEZWxlZ2F0ZSB0byBpbnZva2UgZm9yIGFuIE9uQ29tcGxldGVkIG5vdGlmaWNhdGlvbi5cbiAgICAgICAgICogQHJldHVybnMge0FueX0gUmVzdWx0IHByb2R1Y2VkIGJ5IHRoZSBvYnNlcnZhdGlvbi5cbiAgICAgICAgICovXG4gICAgICAgIGFjY2VwdChvYnNlcnZlcjogSU9ic2VydmVyPFQ+KTogdm9pZDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEludm9rZXMgdGhlIGRlbGVnYXRlIGNvcnJlc3BvbmRpbmcgdG8gdGhlIG5vdGlmaWNhdGlvbiBvciB0aGUgb2JzZXJ2ZXIncyBtZXRob2QgY29ycmVzcG9uZGluZyB0byB0aGUgbm90aWZpY2F0aW9uIGFuZCByZXR1cm5zIHRoZSBwcm9kdWNlZCByZXN1bHQuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBtZW1iZXJPZiBOb3RpZmljYXRpb25cbiAgICAgICAgICogQHBhcmFtIHtBbnl9IG9ic2VydmVyT3JPbk5leHQgRGVsZWdhdGUgdG8gaW52b2tlIGZvciBhbiBPbk5leHQgbm90aWZpY2F0aW9uIG9yIE9ic2VydmVyIHRvIGludm9rZSB0aGUgbm90aWZpY2F0aW9uIG9uLi5cbiAgICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gb25FcnJvciBEZWxlZ2F0ZSB0byBpbnZva2UgZm9yIGFuIE9uRXJyb3Igbm90aWZpY2F0aW9uLlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkNvbXBsZXRlZCBEZWxlZ2F0ZSB0byBpbnZva2UgZm9yIGFuIE9uQ29tcGxldGVkIG5vdGlmaWNhdGlvbi5cbiAgICAgICAgICogQHJldHVybnMge0FueX0gUmVzdWx0IHByb2R1Y2VkIGJ5IHRoZSBvYnNlcnZhdGlvbi5cbiAgICAgICAgICovXG4gICAgICAgIGFjY2VwdDxUUmVzdWx0Pihvbk5leHQ6ICh2YWx1ZTogVCkgPT4gVFJlc3VsdCwgb25FcnJvcjogKGV4Y2VwdGlvbjogYW55KSA9PiBUUmVzdWx0LCBvbkNvbXBsZXRlZDogKCkgPT4gVFJlc3VsdCk6IFRSZXN1bHQ7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgYW4gb2JzZXJ2YWJsZSBzZXF1ZW5jZSB3aXRoIGEgc2luZ2xlIG5vdGlmaWNhdGlvbi5cbiAgICAgICAgICpcbiAgICAgICAgICogQG1lbWJlck9mIE5vdGlmaWNhdGlvbnNcbiAgICAgICAgICogQHBhcmFtIHtTY2hlZHVsZXJ9IFtzY2hlZHVsZXJdIFNjaGVkdWxlciB0byBzZW5kIG91dCB0aGUgbm90aWZpY2F0aW9uIGNhbGxzIG9uLlxuICAgICAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZX0gVGhlIG9ic2VydmFibGUgc2VxdWVuY2UgdGhhdCBzdXJmYWNlcyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5vdGlmaWNhdGlvbiB1cG9uIHN1YnNjcmlwdGlvbi5cbiAgICAgICAgICovXG4gICAgICAgIHRvT2JzZXJ2YWJsZShzY2hlZHVsZXI/OiBJU2NoZWR1bGVyKTogT2JzZXJ2YWJsZTxUPjtcblxuICAgICAgICBoYXNWYWx1ZTogYm9vbGVhbjtcbiAgICAgICAgZXF1YWxzKG90aGVyOiBOb3RpZmljYXRpb248VD4pOiBib29sZWFuO1xuICAgICAgICBraW5kOiBzdHJpbmc7XG4gICAgICAgIHZhbHVlOiBUO1xuICAgICAgICBlcnJvcjogYW55O1xuICAgIH1cblxuICAgIGludGVyZmFjZSBOb3RpZmljYXRpb25TdGF0aWMge1xuICAgICAgICBuZXcgPFQ+KGtpbmQ6IGFueSwgdmFsdWU6IGFueSwgZXhjZXB0aW9uOiBhbnksIGFjY2VwdDogYW55LCBhY2NlcHRPYnNlcnZhYmxlOiBhbnksIHRvU3RyaW5nOiBhbnkpIDogTm90aWZpY2F0aW9uPFQ+O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAqIENyZWF0ZXMgYW4gb2JqZWN0IHRoYXQgcmVwcmVzZW50cyBhbiBPbk5leHQgbm90aWZpY2F0aW9uIHRvIGFuIG9ic2VydmVyLlxuICAgICAgICAqIEBwYXJhbSB7QW55fSB2YWx1ZSBUaGUgdmFsdWUgY29udGFpbmVkIGluIHRoZSBub3RpZmljYXRpb24uXG4gICAgICAgICogQHJldHVybnMge05vdGlmaWNhdGlvbn0gVGhlIE9uTmV4dCBub3RpZmljYXRpb24gY29udGFpbmluZyB0aGUgdmFsdWUuXG4gICAgICAgICovXG4gICAgICAgIGNyZWF0ZU9uTmV4dDxUPih2YWx1ZTogVCk6IE5vdGlmaWNhdGlvbjxUPjtcbiAgICAgICAgLyoqXG4gICAgICAgICogQ3JlYXRlcyBhbiBvYmplY3QgdGhhdCByZXByZXNlbnRzIGFuIE9uRXJyb3Igbm90aWZpY2F0aW9uIHRvIGFuIG9ic2VydmVyLlxuICAgICAgICAqIEBwYXJhbSB7QW55fSBlcnJvciBUaGUgZXhjZXB0aW9uIGNvbnRhaW5lZCBpbiB0aGUgbm90aWZpY2F0aW9uLlxuICAgICAgICAqIEByZXR1cm5zIHtOb3RpZmljYXRpb259IFRoZSBPbkVycm9yIG5vdGlmaWNhdGlvbiBjb250YWluaW5nIHRoZSBleGNlcHRpb24uXG4gICAgICAgICovXG4gICAgICAgIGNyZWF0ZU9uRXJyb3I8VD4oZXhjZXB0aW9uOiBhbnkpOiBOb3RpZmljYXRpb248VD47XG4gICAgICAgIC8qKlxuICAgICAgICAqIENyZWF0ZXMgYW4gb2JqZWN0IHRoYXQgcmVwcmVzZW50cyBhbiBPbkNvbXBsZXRlZCBub3RpZmljYXRpb24gdG8gYW4gb2JzZXJ2ZXIuXG4gICAgICAgICogQHJldHVybnMge05vdGlmaWNhdGlvbn0gVGhlIE9uQ29tcGxldGVkIG5vdGlmaWNhdGlvbi5cbiAgICAgICAgKi9cbiAgICAgICAgY3JlYXRlT25Db21wbGV0ZWQ8VD4oKTogTm90aWZpY2F0aW9uPFQ+O1xuICAgIH1cblxuICAgIGV4cG9ydCB2YXIgTm90aWZpY2F0aW9uIDogTm90aWZpY2F0aW9uU3RhdGljO1xufVxuXG5cbihmdW5jdGlvbigpIHtcbiAgICB2YXIgbm90aWZpY2F0aW9uOiBSeC5Ob3RpZmljYXRpb248bnVtYmVyPiA9IG5ldyBSeC5Ob3RpZmljYXRpb248bnVtYmVyPih1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTtcblxuICAgIHZhciBvYnNlcnZlcjogUnguSU9ic2VydmVyPG51bWJlcj47XG4gICAgbm90aWZpY2F0aW9uLmFjY2VwdChvYnNlcnZlcik7XG4gICAgbm90aWZpY2F0aW9uLmFjY2VwdCgobikgPT4gbi50b1N0cmluZygpLCAoZSkgPT4gZSwgKCkgPT4gZmFsc2UudG9TdHJpbmcoKSk7XG5cbiAgICB2YXIgb2JzZXJ2YWJsZTogUnguT2JzZXJ2YWJsZTxudW1iZXI+ID0gbm90aWZpY2F0aW9uLnRvT2JzZXJ2YWJsZSgpO1xuICAgIHZhciBvYnNlcnZhYmxlOiBSeC5PYnNlcnZhYmxlPG51bWJlcj4gPSBub3RpZmljYXRpb24udG9PYnNlcnZhYmxlKFJ4LlNjaGVkdWxlci5jdXJyZW50VGhyZWFkKTtcblxuICAgIFJ4Lk5vdGlmaWNhdGlvbi5jcmVhdGVPbk5leHQoKCkgPT4gdHJ1ZSk7XG4gICAgUnguTm90aWZpY2F0aW9uLmNyZWF0ZU9uRXJyb3IobmV3IEVycm9yKCdhJykpO1xuICAgIFJ4Lk5vdGlmaWNhdGlvbi5jcmVhdGVPbkNvbXBsZXRlZCgpO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
